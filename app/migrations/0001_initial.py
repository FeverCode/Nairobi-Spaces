# Generated by Django 3.2 on 2022-07-14 05:32

import cloudinary.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NewsLetterRecepients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Spaces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('Suncity Picnic Scene', 'Suncity Picnic Scene'), ('Serenity Chill Space', 'Serenity Chill Space'), ('Ihub Office Workspace', 'Ihub Office Workspace')], max_length=200)),
                ('description', models.TextField()),
                ('photo', cloudinary.models.CloudinaryField(max_length=255, verbose_name='Image')),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('location', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField(max_length=500)),
                ('reviewee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numberOfPeople', models.IntegerField()),
                ('dateFrom', models.DateField(unique=True)),
                ('dateTo', models.DateField(unique=True)),
                ('time', models.TimeField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to=settings.AUTH_USER_MODEL)),
                ('space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='space', to='app.spaces')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=255)),
                ('photo', cloudinary.models.CloudinaryField(default='https://res.cloudinary.com/fevercode/image/upload/v1654534329/default_n0r7rf.png', max_length=255, verbose_name='image')),
                ('username', models.CharField(blank=True, max_length=255)),
                ('contact', models.CharField(blank=True, max_length=13, validators=[django.core.validators.RegexValidator(message='Phone number must field up to 10 digits allowed.', regex='^[0-9]{10}$')])),
                ('location', models.CharField(max_length=255)),
                ('bio', models.TextField(default='This is my bio', max_length=500)),
                ('reviews', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.reviews')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
